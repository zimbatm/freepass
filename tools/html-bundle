#!/usr/bin/ruby
# One file to rule them all
#
# A little tool that joins JavaScript resources and CSS resources into the HTML
# 
# TODO: also join images ?

begin
	require 'rubygems'
rescue LoadError; end

begin
	require 'nokogiri'
rescue LoadError
	$stderr.puts 'ERROR: nokogiri library not found'
	exit 1
end

def usage()
  $stderr.puts "Usage: #{File.basename($0)} <SOURCE_HTML> <OUT_HTML>"
  exit 1
end

if !ARGV[0] || !ARGV[1]
  usage()
end

SRC = ARGV[0]
SRC_DIR = File.dirname(SRC)
DST = ARGV[1]

if !File.file? SRC
  $stderr.puts "* Source file #{SRC} not readable"
  exit 1
end

doc = Nokogiri::HTML(File.open(SRC)){ |config| config.strict }

##
## CSS
##
css_content = []
doc.css('link[rel="stylesheet"]').each do |link|
  css_content << File.read(File.join(SRC_DIR, link['href']))
  link.unlink
end

style = doc.create_element('style')
style.inner_html = css_content.join("\n")
doc.at_css('head').add_child style

##
## JavaScript
###
js_content = []
doc.css("script[src]").each do |script|
  js_content << File.read(File.join(SRC_DIR, script['src']))
  script.unlink
end

js_content = js_content.join

script = doc.create_element('script')
# BUG: HTML comment is necessary for nokogiri to understand the content of the <script> tag
script.inner_html = "<!--@\n"+js_content+"\n@-->"
doc.at_css('head').add_child script

##
## Cleanup
##

out_html = doc.to_html.gsub("<!--@\n",'').gsub("\n@-->", '')

File.open(DST, 'w'){|f| f.write out_html }
